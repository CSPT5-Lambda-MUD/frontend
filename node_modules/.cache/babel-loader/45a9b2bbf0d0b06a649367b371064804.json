{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Code_Projects/Lambda_Fullstack/Build Week/MUD/frontend/lambda-mud/src/Components/Login.js\";\nimport React, { useState } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport axios from 'axios';\n\nconst Login = props => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [register, setRegister] = useState(false);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = e => {\n    setLoading(true);\n    e.preventDefault(); //create object with credentials\n\n    const loginCredentials = {\n      username: username,\n      password: password\n    };\n    const signUpCredentials = {\n      username: username,\n      password1: password,\n      password2: password2\n    };\n    console.log(signUpCredentials); //API Call here before clearing the fields\n\n    setError(false);\n\n    if (register) {\n      signUp(signUpCredentials);\n    } else {\n      signIn(loginCredentials);\n    } //\n\n\n    setUsername('');\n    setPassword('');\n    setPassword2('');\n  };\n\n  function signIn(credentials) {\n    axios.post(`https://lambda-mud-test.herokuapp.com/api/login/, ${credentials}`).then(response => {\n      console.log(response.data); // place token in local storage for axiosWithAuth to handle it\n\n      localStorage.setItem('token', response.data.key); //redirect user to game\n      // props.history.push('protected');\n\n      setLoading(false);\n    }).catch(error => {\n      console.log(error);\n      setError(true);\n      setLoading(false);\n    });\n  }\n\n  function signUp(credentials) {\n    axios.post(`https://lambda-mud-test.herokuapp.com/api/registration/, ${credentials}`).then(response => {\n      console.log(response.data); // place token in local storage for axiosWithAuth to handle it\n\n      localStorage.setItem('token', response.data.key); //redirect user to game\n      // props.history.push('protected');\n\n      setLoading(false);\n    }).catch(error => {\n      console.log(error);\n      setError(true);\n      setLoading(false);\n    });\n  }\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Loading ...\")));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, register ? 'Sign up' : 'Login'), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, error && React.createElement(\"h1\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Incorrect email or password, try again.\"), React.createElement(TextField, {\n      name: \"username\",\n      id: \"outlined-basic\",\n      label: \"Email\",\n      variant: \"outlined\",\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true,\n      className: \"textField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"password\",\n      id: \"outlined-basic\",\n      label: \"Password\",\n      variant: \"outlined\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true,\n      className: \"textField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), register && React.createElement(TextField, {\n      name: \"password2\",\n      id: \"outlined-basic\",\n      label: \"Confirm Password\",\n      variant: \"outlined\",\n      type: \"password\",\n      value: password2,\n      onChange: e => setPassword2(e.target.value),\n      required: true,\n      className: \"textField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      id: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, register ? 'Sign up' : 'Login')), React.createElement(\"a\", {\n      onClick: () => setRegister(!register),\n      id: \"signupButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, register ? 'Already have account?' : 'Sign up')));\n  }\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/mac/Code_Projects/Lambda_Fullstack/Build Week/MUD/frontend/lambda-mud/src/Components/Login.js"],"names":["React","useState","TextField","Button","axios","Login","props","username","setUsername","password","setPassword","password2","setPassword2","register","setRegister","error","setError","loading","setLoading","handleSubmit","e","preventDefault","loginCredentials","signUpCredentials","password1","console","log","signUp","signIn","credentials","post","then","response","data","localStorage","setItem","key","catch","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport axios from 'axios';\n\nconst Login = props => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [register, setRegister] = useState(false);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = e => {\n    setLoading(true);\n    e.preventDefault();\n    //create object with credentials\n    const loginCredentials = {\n      username: username,\n      password: password\n    };\n\n    const signUpCredentials = {\n      username: username,\n      password1: password,\n      password2: password2\n    };\n    console.log(signUpCredentials);\n    //API Call here before clearing the fields\n    setError(false);\n    if (register) {\n      signUp(signUpCredentials);\n    } else {\n      signIn(loginCredentials);\n    }\n    //\n    setUsername('');\n    setPassword('');\n    setPassword2('');\n  };\n\n  function signIn(credentials) {\n    axios\n      .post(`https://lambda-mud-test.herokuapp.com/api/login/, ${credentials}`)\n      .then(response => {\n        console.log(response.data);\n        // place token in local storage for axiosWithAuth to handle it\n        localStorage.setItem('token', response.data.key);\n        //redirect user to game\n        // props.history.push('protected');\n        setLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setError(true);\n        setLoading(false);\n      });\n  }\n\n  function signUp(credentials) {\n    axios\n      .post(\n        `https://lambda-mud-test.herokuapp.com/api/registration/, ${credentials}`\n      )\n      .then(response => {\n        console.log(response.data);\n        // place token in local storage for axiosWithAuth to handle it\n        localStorage.setItem('token', response.data.key);\n        //redirect user to game\n        // props.history.push('protected');\n        setLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setError(true);\n        setLoading(false);\n      });\n  }\n\n  if (loading) {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <h1>Loading ...</h1>\n        </header>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <h1>{register ? 'Sign up' : 'Login'}</h1>\n          <br />\n          <form onSubmit={handleSubmit}>\n            {error && (\n              <h1 className=\"error\">Incorrect email or password, try again.</h1>\n            )}\n            <TextField\n              name=\"username\"\n              id=\"outlined-basic\"\n              label=\"Email\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              required\n              className=\"textField\"\n            />\n            <TextField\n              name=\"password\"\n              id=\"outlined-basic\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              required\n              className=\"textField\"\n            />\n            {register && (\n              <TextField\n                name=\"password2\"\n                id=\"outlined-basic\"\n                label=\"Confirm Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                value={password2}\n                onChange={e => setPassword2(e.target.value)}\n                required\n                className=\"textField\"\n              />\n            )}\n            <br />\n            <br />\n            <Button type=\"submit\" id=\"submitButton\">\n              {register ? 'Sign up' : 'Login'}\n            </Button>\n          </form>\n          <a onClick={() => setRegister(!register)} id=\"signupButton\">\n            {register ? 'Already have account?' : 'Sign up'}\n          </a>\n        </header>\n      </div>\n    );\n  }\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}